!function(n,e){"function"==typeof define&&define.amd?define(["renderfarm"],function(t){return n.renderfarm=e(t)}):"object"==typeof module&&module.exports?module.exports=n.renderfarm=e(require("renderfarm")):n.renderfarm=e()}(this,function(){function n(n){function t(n,t,r){i={};for(l in t)i[l]=e.map(n,0,1,t[l],r[l]);return i}function r(){for(o=$(window).height(),c=-n.y,a=Math.abs(c)+o,console.log("recalculate",o,c,a),l=0;l<h.length;l++)h[l]();console.log(o,c,a)}function s(){for(c=-n.y,a=c+o,l=0;l<u.length;l++)u[l]();console.log(o,c,a)}var o,a,l,i,d=$(window),c=0,f=[],u=[],h=[];return n.on("scroll",s),n.on("scrollEnd",s),document.addEventListener("touchmove",function(n){n.preventDefault()},!1),d.resize(function(){r(),s()}),{destroy:function(){f=[],u=[],h=[]},addPiggy:function(n,s){var a,l,i,d,p,w,m=$(n),y=!1,v=0;return f.push(m),s.hasOwnProperty("start")&&s.hasOwnProperty("end")?(s.start.when.indexOf("%")!==-1&&(s.start.when=Number(s.start.when.split("%")[0])/100),s.start.is.indexOf("%")!==-1&&(s.start.is=Number(s.start.is.split("%")[0])/100),s.end.when.indexOf("%")!==-1&&(s.end.when=Number(s.end.when.split("%")[0])/100),s.end.is.indexOf("%")!==-1&&(s.end.is=Number(s.end.is.split("%")[0])/100),h.push(function(){a=m.position().top,l=m.height(),i=a+l*s.start.when,d=a+l*s.end.when}),u.push(function(){i<c+o*s.start.is&&d>c+o*s.end.is&&!y?(s.start.hasOwnProperty("call")&&!y&&(c>a?s.start.call(!1):s.start.call(!0)),y=!0):(i>c+o*s.start.is||d<=c+o*s.end.is)&&y&&(y=!1,d>c+o*s.end.is?(s.hasOwnProperty("scroll")&&(s.start.hasOwnProperty("vals")&&s.end.hasOwnProperty("vals")?s.scroll(s.start.vals):s.scroll({offset:0})),s.end.hasOwnProperty("call")&&s.end.call(!1)):(y=!1,s.hasOwnProperty("scroll")&&(s.start.hasOwnProperty("vals")&&s.end.hasOwnProperty("vals")?s.scroll(s.end.vals):s.scroll({offset:1})),s.end.hasOwnProperty("call")&&s.end.call(!0))),y&&(p=Math.floor(c+o*s.start.is-i),w=Math.floor(d-(c+o*s.end.is)),v=e.map(p,0,p+w,0,1),s.hasOwnProperty("scroll")&&(s.start.hasOwnProperty("vals")&&s.end.hasOwnProperty("vals")?s.scroll(t(v,s.start.vals,s.end.vals)):s.scroll({offset:v})))}),void r()):void console.warn("Must supply start:{} and end:{} objects. Look at the example in the documentation for details.")}}}var e={normalize:function(n,e,t){return(n-e)/(t-e)},interpolate:function(n,e,t){return e+(t-e)*n},map:function(n,e,t,r,s){return n<e&&(n=e),n>t&&(n=t),this.interpolate(this.normalize(n,e,t),r,s)}};return n});